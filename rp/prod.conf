daemon off;
worker_processes 4;
error_log	/var/log/nginx/error.log warn;
pid				/var/run/nginx.pid;

events { worker_connections 1024; }

http {
	map $http_upgrade $connection_upgrade {
	  default upgrade;
	  '' close;
	}
	upstream feapp {
    least_conn;
		server fe1:10000 weight=10 max_fails=3 fail_timeout=30s;
		server fe2:10000 weight=10 max_fails=3 fail_timeout=30s;
		server fe3:10000 weight=10 max_fails=3 fail_timeout=30s;
	}

	server {
		listen 80 proxy_protocol;
		listen 443 proxy_protocol;

		server_name koderkat.com;

		# proxy_set_header X-Forwarded-Proto $scheme;
	  # if ( $http_x_forwarded_proto != 'https' ) {
	  #   return 301 https://$host$request_uri;
	  # }

		location / {
      proxy_pass http://feapp;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;

			# proxy_set_header Connection "Upgrade";
			proxy_set_header X-Real-IP       $proxy_protocol_addr;
			proxy_set_header X-Forwarded-For $proxy_protocol_addr;
			# Very important, controls proxied websocket connection timeout
			proxy_read_timeout 600s;


    }

		location /socket.io/ {
			proxy_pass http://feapp;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
		}

	}
}











# # proxy_protocol is necessary,
# # if we want info of the client from ELB
# listen 80 proxy_protocol;
#
# location / {
# 		proxy_pass http://wsserver;
#
# 		proxy_set_header Upgrade $http_upgrade;
# 		proxy_set_header Connection "Upgrade";
#
# 		proxy_set_header Host            $host;
# 		proxy_set_header X-Real-IP       $proxy_protocol_addr;
# 		proxy_set_header X-Forwarded-For $proxy_protocol_addr;
#
# 		# Very important, controls proxied websocket connection timeout
# 		proxy_read_timeout 600s;
